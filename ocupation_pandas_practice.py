# -*- coding: utf-8 -*-
"""Ocupation Pandas Practice

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1785SSFlCNaYRnbKHj2PuOYDgSLQAqQyv

# Ex3 - Getting and Knowing your Data

This time we are going to pull data directly from the internet.
Special thanks to: https://github.com/justmarkham for sharing the dataset and materials.

### Step 1. Import the necessary libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""### Step 2. Import the dataset from this [address](https://raw.githubusercontent.com/justmarkham/DAT8/master/data/u.user).

### Step 3. Assign it to a variable called users and use the 'user_id' as index
"""

url = "https://raw.githubusercontent.com/justmarkham/DAT8/master/data/u.user"
users = pd.read_csv(url, sep = "|")

"""### Step 4. See the first 25 entries"""

users.head(25)

"""### Step 5. See the last 10 entries"""

users.tail(10)

"""### Step 6. What is the number of observations in the dataset?"""

users.shape[0]

"""### Step 7. What is the number of columns in the dataset?"""

users.shape[1]

"""### Step 8. Print the name of all the columns."""

users.columns

"""### Step 9. How is the dataset indexed?"""

users.index

"""### Step 10. What is the data type of each column?"""

users.dtypes

"""### Step 11. Print only the occupation column"""

users['occupation']

"""### Step 12. How many different occupations are in this dataset?"""

users['occupation'].nunique()

"""### Step 13. What is the most frequent occupation?"""

users["occupation"].value_counts().idxmax()

"""### Step 14. Summarize the DataFrame."""

users.describe()

"""### Step 15. Summarize all the columns"""

users.describe()

"""### Step 16. Summarize only the occupation column"""

users["occupation"].describe()

"""### Step 17. What is the mean age of users?"""

users["age"].mean()

"""### Step 18. What is the age with least occurrence?"""

users["age"].value_counts().idxmin()

users["age"].value_counts().idxmax()

users["age"].plot(kind = "hist", bins = 15)

users["occupation"].value_counts().plot(kind = "bar")

users["zip_code"].value_counts().head(10).plot(kind = "barh")

