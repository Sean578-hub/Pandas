# -*- coding: utf-8 -*-
"""Tips Pandas Visualization

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Xt-f86JafRR5yt73ykJ-yATclbK9rn_9

# Tips

### Introduction:

This exercise was created based on the tutorial and documentation from [Seaborn](https://stanford.edu/~mwaskom/software/seaborn/index.html)  
The dataset being used is tips from Seaborn.

### Step 1. Import the necessary libraries:
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""### Step 2. Import the dataset from this [address](https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/07_Visualization/Tips/tips.csv).

### Step 3. Assign it to a variable called tips
"""

url = "https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/07_Visualization/Tips/tips.csv"
tips = pd.read_csv(url, sep = ",")

"""### Step 4. Delete the Unnamed 0 column"""

tips.drop("Unnamed: 0", axis = 1)

"""### Step 5. Plot the total_bill column histogram"""

tips["total_bill"].plot(kind = "hist")
plt.show()

"""### Step 6. Create a scatter plot presenting the relationship between total_bill and tip"""

plt.scatter(tips.total_bill, tips.tip)
plt.xlabel("total_bill")
plt.ylabel("tip")
plt.show()

"""### Step 7.  Create one image with the relationship of total_bill, tip and size.
#### Hint: It is just one function.
"""

plt.scatter(tips.total_bill, tips.tip, s = tips.size)
plt.xlabel("total_bill")
plt.ylabel("tip")
plt.show()

"""### Step 8. Present the relationship between days and total_bill value"""

plt.scatter(tips.total_bill, tips.day)
plt.xlabel("total_bill")
plt.ylabel("day")
plt.show()

"""### Step 9. Create a scatter plot with the day as the y-axis and tip as the x-axis, differ the dots by sex"""

plt.scatter(tips.tip, tips.day)
plt.xlabel("tip")
plt.ylabel("day")
plt.show()

"""### Step 10.  Create a box plot presenting the total_bill per day differetiation the time (Dinner or Lunch)"""

plt.figure(figsize = (12, 5))
plt.subplot(1, 2, 1)
sns.boxplot(x = "day", y = "total_bill", data = tips[tips["time"] == "Lunch"])

plt.subplot(1, 2, 2)
sns.boxplot(x = "day", y = "total_bill", data = tips[tips["time"] == "Dinner"])
plt.show()

"""### Step 11. Create two histograms of the tip value based for Dinner and Lunch. They must be side by side."""

plt.figure(figsize = (12, 5))
plt.subplot(1, 2, 1)
sns.histplot(tips[tips["time"] == "Lunch"]["tip"])

plt.subplot(1, 2, 2)
sns.histplot(tips[tips["time"] == "Dinner"]["tip"])
plt.show()

"""### Step 12. Create two scatterplots graphs, one for Male and another for Female, presenting the total_bill value and tip relationship, differing by smoker or no smoker
### They must be side by side.
"""

plt.figure(figsize = (12, 5))
plt.subplot(1, 2, 1)
sns.scatterplot(x = "total_bill", y = "tip", hue = "smoker", data = tips[tips["sex"] == "Male"])
plt.subplot(1, 2, 2)
sns.scatterplot(x = "total_bill", y = "tip", hue = "smoker", data = tips[tips["sex"] == "Female"])
plt.show()

"""### BONUS: Create your own question and answer it using a graph."""

plt.scatter(tips.total_bill, tips.time)
plt.xlabel("total_bill")
plt.ylabel("time")
plt.show()
precenteges = tips["total_bill"].mean()
precenteges

plt.figure(figsize = (10, 4))

plt.subplot(1, 2, 1)
plt.plot([0, 1, 2], [0, 1, 2], "r-")
plt.title("Linear")

plt.subplot(1, 2, 2)
plt.plot([0 ,1, 2], [0, 1, 4], "b--")
plt.title("Quadratic")

plt.tight_layout()
plt.show()

