# -*- coding: utf-8 -*-
"""Student Alcohol Consumption Pandas

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c53xF0-_tC0f0j1vcQEcDiFiV8AoH-Q3

# Student Alcohol Consumption

### Introduction:

This time you will download a dataset from the UCI.

### Step 1. Import the necessary libraries
"""

import pandas as pd
import numpy as np

"""### Step 2. Import the dataset from this [address](https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/04_Apply/Students_Alcohol_Consumption/student-mat.csv).

### Step 3. Assign it to a variable called df.
"""

url = "https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/04_Apply/Students_Alcohol_Consumption/student-mat.csv"
df = pd.read_csv(url, sep = ",")

"""### Step 4. For the purpose of this exercise slice the dataframe from 'school' until the 'guardian' column"""

df.loc[:, "school" : "guardian"]

"""### Step 5. Create a lambda function that will capitalize strings."""

capitalizer = lambda x: x.capitalize()

"""### Step 6. Capitalize both Mjob and Fjob"""

df["Mjob"] = df["Mjob"].apply(capitalizer)
df["Fjob"] = df["Fjob"].apply(capitalizer)

"""### Step 7. Print the last elements of the data set."""

df.tail()

"""### Step 8. Did you notice the original dataframe is still lowercase? Why is that? Fix it and capitalize Mjob and Fjob."""

capitalizer2 = lambda x: x.capitalize()
df["Mjob"] = df["Mjob"].apply(capitalizer2)
df["Fjob"] = df["Fjob"].apply(capitalizer2)

"""### Step 9. Create a function called majority that returns a boolean value to a new column called legal_drinker (Consider majority as older than 17 years old)"""

def majority(age):
  return age > 17
df["legal_drinker"] = df["age"].apply(majority)



"""### Step 10. Multiply every number of the dataset by 10.
##### I know this makes no sense, don't forget it is just an exercise
"""

numeric_cols = df.select_dtypes(include = ["int64", "float64"]).columns
df[numeric_cols] = df[numeric_cols].apply(lambda x: x * 10)

