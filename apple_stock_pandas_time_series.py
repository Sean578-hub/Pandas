# -*- coding: utf-8 -*-
"""Apple Stock Pandas Time Series

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pN2ahp5ZHquhi_OBjBj1gdn7rKsCzMHP

# Apple Stock

### Introduction:

We are going to use Apple's stock price.


### Step 1. Import the necessary libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""### Step 2. Import the dataset from this [address](https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/09_Time_Series/Apple_Stock/appl_1980_2014.csv)"""

url = "https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/09_Time_Series/Apple_Stock/appl_1980_2014.csv"

"""### Step 3. Assign it to a variable apple"""

apple = pd.read_csv(url, sep = ",")

"""### Step 4.  Check out the type of the columns"""

apple.dtypes

"""### Step 5. Transform the Date column as a datetime type"""

apple["Date"] = pd.to_datetime(apple["Date"])

"""### Step 6.  Set the date as the index"""

apple.set_index("Date", inplace = True)

"""### Step 7.  Is there any duplicate dates?"""

apple.index.duplicated().any()

"""### Step 8.  Ops...it seems the index is from the most recent date. Make the first entry the oldest date."""

dif = apple.sort_index(inplace = True)
apple

"""### Step 9. Get the last business day of each month"""

last_day = apple.resample("BM").mean().index

"""### Step 10.  What is the difference in days between the first day and the oldest"""

date_dif = (apple.index[-1] - apple.index[0]).days
date_dif

"""### Step 11.  How many months in the data we have?"""

amount_month = apple.resample("ME").size().shape[0]
amount_month

"""### Step 12. Plot the 'Adj Close' value. Set the size of the figure to 13.5 x 9 inches"""

plt.figure(figsize = (13.5, 9))
apple["Adj Close"].plot()
plt.xlabel("Open")
plt.ylabel("Close")
plt.show()

"""### BONUS: Create your own question and answer it."""

plt.figure(figsize = (13.5, 9))
apple["Adj Close"].plot()
plt.xlabel("Date")
plt.ylabel("Adj Close")
plt.show()

